{"ast":null,"code":"var _jsxFileName = \"/home/binhcao/Desktop/task-management/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport TaskList from './components/TaskList';\nimport { findIndex } from 'lodash';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onGenerateData = () => {\n      var tasks = [{\n        id: this.generateId(),\n        name: 'Learn programming',\n        status: true\n      }, {\n        id: this.generateId(),\n        name: 'Go swimming',\n        status: false\n      }, {\n        id: this.generateId(),\n        name: 'Go to bed',\n        status: true\n      }];\n      this.setState({\n        tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onToggleForm = () => {\n      this.props.onToggleForm();\n    };\n\n    this.onDelete = id => {\n      var tasks = this.state.tasks;\n      var index = findIndex(tasks, task => {\n        return task.id === id;\n      });\n\n      if (index > -1) {\n        tasks.splice(index, 1);\n        this.setState({\n          tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n    };\n\n    this.onUpdate = id => {\n      var tasks = this.state.tasks;\n      var index = findIndex(tasks, task => {\n        return task.id === id;\n      });\n      var taskEditing = tasks[index];\n      this.setState({\n        taskEditing\n      });\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      filterStatus = parseInt(filterStatus, 10);\n      this.setState({\n        filterName: filterName.toLowerCase(),\n        filterStatus\n      });\n    };\n\n    this.onSearch = keyword => {\n      this.setState({\n        keyword\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        // Nhận từ state component dưới rồi chuyền props trở lại\n        sortBy,\n        sortValue\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      taskEditing: null,\n      //Based on taskEditing to know TaskForm is add or modify\n      filterName: '',\n      filterStatus: -1,\n      keyword: '',\n      sortBy: 'name',\n      // shouldn't object type\n      sortValue: 1\n    };\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateId() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n  }\n\n  render() {\n    var _this$state = this.state,\n        tasks = _this$state.tasks,\n        taskEditing = _this$state.taskEditing,\n        filterName = _this$state.filterName,\n        filterStatus = _this$state.filterStatus,\n        keyword = _this$state.keyword,\n        sortBy = _this$state.sortBy,\n        sortValue = _this$state.sortValue;\n    var isDisplayForm = this.props.isDisplayForm;\n\n    if (filterName) {\n      // !== null !== 0 !== undefined\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(filterName) !== -1;\n      });\n    }\n\n    tasks = tasks.filter(task => {\n      if (filterStatus === -1) return task;else return task.status === (filterStatus === 1 ? true : false);\n    });\n\n    if (keyword) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n      });\n    }\n\n    if (sortBy === 'name') {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sortValue;else if (a.name < b.name) return -sortValue;else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sortValue;else if (a.status < b.status) return sortValue;else return 0;\n      });\n    }\n\n    var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n      taskEditing: taskEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Task Management\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : 'col-xs-0 col-sm-0 col-md-0 col-lg-0',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), \"Add your task\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger ml-5\",\n      onClick: this.onGenerateData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Generate sample data\"), React.createElement(TaskControl, {\n      onSearch: this.onSearch,\n      onSort: this.onSort,\n      sortBy: sortBy,\n      sortValue: sortValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(TaskList, {\n      onDelete: this.onDelete,\n      onUpdate: this.onUpdate,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/binhcao/Desktop/task-management/src/App.js"],"names":["React","Component","TaskForm","TaskControl","TaskList","findIndex","connect","actions","App","constructor","props","onGenerateData","tasks","id","generateId","name","status","setState","localStorage","setItem","JSON","stringify","onToggleForm","onDelete","state","index","task","splice","onUpdate","taskEditing","onFilter","filterName","filterStatus","parseInt","toLowerCase","onSearch","keyword","onSort","sortBy","sortValue","s4","Math","floor","random","toString","substring","render","isDisplayForm","filter","indexOf","sort","a","b","elmTaskForm","mapStateToProps","mapDispatchToProps","dispatch","toggleForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport TaskList from './components/TaskList';\nimport {findIndex} from 'lodash';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      taskEditing: null,         //Based on taskEditing to know TaskForm is add or modify\n      filterName: '',\n      filterStatus: -1,\n      keyword: '',\n      sortBy: 'name',         // shouldn't object type\n      sortValue: 1\n    }\n  }\n\n  onGenerateData = () => {\n    var tasks = [\n      {\n        id: this.generateId(),\n        name: 'Learn programming',\n        status: true\n      },\n      {\n        id: this.generateId(),\n        name: 'Go swimming',\n        status: false\n      },\n      {\n        id: this.generateId(),\n        name: 'Go to bed',\n        status: true\n      }\n    ];\n    this.setState({\n      tasks\n    });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateId() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n  }\n\n  onToggleForm = () => {\n    this.props.onToggleForm();\n  }\n\n  onDelete = (id) => {\n    var {tasks} = this.state;\n    var index = findIndex(tasks, task => {\n      return task.id === id;\n    });\n    if (index > -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n  }\n\n  onUpdate = (id) => {\n    var {tasks} = this.state;\n    var index = findIndex(tasks, task => {\n      return task.id === id;\n    });\n    var taskEditing = tasks[index];\n    this.setState({\n      taskEditing\n    });\n  }\n\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n        filterName: filterName.toLowerCase(),\n        filterStatus\n    });\n  }\n\n  onSearch = (keyword) => {\n    this.setState({\n      keyword\n    });\n  }\n\n  onSort = (sortBy, sortValue) => {\n    this.setState({             // Nhận từ state component dưới rồi chuyền props trở lại\n        sortBy,\n        sortValue\n    })\n  }\n\n  render() {\n    var { tasks, taskEditing, filterName, filterStatus, keyword, sortBy, sortValue } = this.state;\n    var {isDisplayForm} = this.props;\n    if (filterName) {            // !== null !== 0 !== undefined\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(filterName) !== -1;\n      });\n    }        \n    tasks = tasks.filter(task => {\n      if (filterStatus === -1) return task;\n      else return task.status === (filterStatus === 1 ? true : false);\n    });\n    if (keyword) {            \n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n      });\n    }\n\n    if (sortBy === 'name') {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sortValue;\n        else if (a.name < b.name) return -sortValue;\n        else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sortValue;\n        else if (a.status < b.status) return sortValue;\n        else return 0;\n      });\n    }\n\n    var elmTaskForm = isDisplayForm ? <TaskForm taskEditing={taskEditing}/> : '';\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Task Management</h1><hr />\n        </div>\n        <div className=\"row\">\n          <div className={isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : 'col-xs-0 col-sm-0 col-md-0 col-lg-0'}>\n            {elmTaskForm}\n          </div>\n          <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.onToggleForm}>\n              <span className=\"fa fa-plus mr-5\"></span>Add your task\n            </button>\n            <button type=\"button\" className=\"btn btn-danger ml-5\" onClick={this.onGenerateData}>\n              Generate sample data\n            </button>\n            <TaskControl \n                onSearch={this.onSearch} \n                onSort={this.onSort}\n                sortBy={sortBy}\n                sortValue={sortValue}\n            />\n            <div className=\"row mt-15\">\n              <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <TaskList \n                  onDelete={this.onDelete}\n                  onUpdate={this.onUpdate}\n                  onFilter={this.onFilter}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisDisplayForm: state.isDisplayForm\n\t}\n};\nconst mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tonToggleForm: () => {\n\t\t\tdispatch(actions.toggleForm())\n    }\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}