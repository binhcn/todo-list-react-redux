{"ast":null,"code":"import * as types from '../constants/ActionTypes';\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      var newTask = {\n        id: generateId(),\n        name: action.task.name,\n        status: action.task.status === 'true' ? true : false\n      };\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nvar s4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n};\n\nvar generateId = () => {\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/binhcao/Desktop/task-management/src/reducers/tasks.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","ADD_TASK","newTask","id","generateId","name","task","status","s4","Math","floor","random","toString","substring"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,IAAIM,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,KAAK,CAACW,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKR,KAAK,CAACY,QAAX;AACI,UAAIC,OAAO,GAAG;AACVC,QAAAA,EAAE,EAAEC,UAAU,EADJ;AAEVC,QAAAA,IAAI,EAAEP,MAAM,CAACQ,IAAP,CAAYD,IAFR;AAGVE,QAAAA,MAAM,EAAET,MAAM,CAACQ,IAAP,CAAYC,MAAZ,KAAuB,MAAvB,GAAgC,IAAhC,GAAuC;AAHrC,OAAd;AAKA,aAAOV,KAAP;;AACJ;AACI,aAAOA,KAAP;AAXR;AAaH,CAdD;;AAgBA,IAAIW,EAAE,GAAG,MAAM;AACX,SAAOC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAL,IAAsB,OAAjC,EAA0CC,QAA1C,CAAmD,EAAnD,EAAuDC,SAAvD,CAAiE,CAAjE,CAAP;AACH,CAFD;;AAIA,IAAIT,UAAU,GAAI,MAAM;AACpB,SAAOI,EAAE,KAAKA,EAAE,EAAT,GAAc,GAAd,GAAoBA,EAAE,EAAtB,GAA2B,GAA3B,GAAiCA,EAAE,EAAnC,GAAwC,GAAxC,GAA8CA,EAAE,EAAhD,GAAqD,GAArD,GAA2DA,EAAE,EAA7D,GAAkEA,EAAE,EAApE,GAAyEA,EAAE,EAAlF;AACH,CAFD;;AAKA,eAAeZ,SAAf","sourcesContent":["import * as types from '../constants/ActionTypes'\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.LIST_ALL:\n            return state;\n        case types.ADD_TASK:\n            var newTask = {\n                id: generateId(),\n                name: action.task.name,\n                status: action.task.status === 'true' ? true : false\n            }\n            return state;\n        default:\n            return state;\n    }\n};\n\nvar s4 = () => {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n}\n\nvar generateId  = () => {\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}