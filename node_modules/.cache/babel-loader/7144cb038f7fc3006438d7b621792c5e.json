{"ast":null,"code":"import * as types from '../constants/ActionTypes';\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\ns4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n};\n\ngenerateId = () => {\n  return s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/binhcao/Desktop/task-management/src/reducers/tasks.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","ADD_TASK","s4","Math","floor","random","toString","substring","generateId"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,IAAIM,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,KAAK,CAACW,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKR,KAAK,CAACY,QAAX;AACI,aAAOJ,KAAP;;AACJ;AACI,aAAOA,KAAP;AANR;AAQH,CATD;;AAWAK,EAAE,GAAG,MAAM;AACP,SAAOC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAL,IAAsB,OAAjC,EAA0CC,QAA1C,CAAmD,EAAnD,EAAuDC,SAAvD,CAAiE,CAAjE,CAAP;AACD,CAFH;;AAIAC,UAAU,GAAI,MAAM;AACpB,SAAON,EAAE,KAAK,KAAKA,EAAL,EAAP,GAAmB,GAAnB,GAAyB,KAAKA,EAAL,EAAzB,GAAqC,GAArC,GAA2C,KAAKA,EAAL,EAA3C,GAAuD,GAAvD,GAA6D,KAAKA,EAAL,EAA7D,GAAyE,GAAzE,GAA+E,KAAKA,EAAL,EAA/E,GAA2F,KAAKA,EAAL,EAA3F,GAAuG,KAAKA,EAAL,EAA9G;AACC,CAFD;;AAIA,eAAeN,SAAf","sourcesContent":["import * as types from '../constants/ActionTypes'\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.LIST_ALL:\n            return state;\n        case types.ADD_TASK:\n            return state;\n        default:\n            return state;\n    }\n};\n\ns4 = () => {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\ngenerateId  = () => {\nreturn s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}