{"ast":null,"code":"var _jsxFileName = \"/home/binhcao/Desktop/task-management/src/components/TaskItem.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\n\nclass TaskItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onUpdateStatus = () => {\n      this.props.onUpdateStatus(this.props.task.id);\n    };\n\n    this.onDelete = () => {\n      this.props.onDelete(this.props.task.id);\n    };\n\n    this.onUpdate = () => {\n      this.props.onUpdate(this.props.task.id);\n    };\n  }\n\n  showStatusElement() {\n    return React.createElement(\"span\", {\n      className: this.props.task.status ? 'label label-danger' : 'label label-info',\n      onClick: this.onUpdateStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, this.props.task.status ? 'Active' : 'Hidden');\n  }\n\n  render() {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.index + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.task.name), React.createElement(\"td\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.showStatusElement()), React.createElement(\"td\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning\",\n      onClick: this.onUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-pencil mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), \"Modify\"), \"\\xA0\", React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-trash mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), \"Delete\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onUpdateStatus: id => {\n      dispatch(actions.updateStatus(id));\n    },\n    onDeleteTask: id => {\n      dispatch(actions.deleteTask(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);","map":{"version":3,"sources":["/home/binhcao/Desktop/task-management/src/components/TaskItem.js"],"names":["React","Component","connect","actions","TaskItem","onUpdateStatus","props","task","id","onDelete","onUpdate","showStatusElement","status","render","index","name","mapStateToProps","state","mapDispatchToProps","dispatch","updateStatus","onDeleteTask","deleteTask"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAYhCI,cAZgC,GAYf,MAAM;AACtB,WAAKC,KAAL,CAAWD,cAAX,CAA0B,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,EAA1C;AACA,KAd+B;;AAAA,SAgBhCC,QAhBgC,GAgBrB,MAAM;AAChB,WAAKH,KAAL,CAAWG,QAAX,CAAoB,KAAKH,KAAL,CAAWC,IAAX,CAAgBC,EAApC;AACA,KAlB+B;;AAAA,SAoBhCE,QApBgC,GAoBrB,MAAM;AAChB,WAAKJ,KAAL,CAAWI,QAAX,CAAoB,KAAKJ,KAAL,CAAWC,IAAX,CAAgBC,EAApC;AACA,KAtB+B;AAAA;;AAChCG,EAAAA,iBAAiB,GAAG;AACnB,WACC;AACC,MAAA,SAAS,EAAE,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,MAAhB,GAAyB,oBAAzB,GAAgD,kBAD5D;AAEC,MAAA,OAAO,EAAE,KAAKP,cAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,KAAKC,KAAL,CAAWC,IAAX,CAAgBK,MAAhB,GAAyB,QAAzB,GAAoC,QAJtC,CADD;AAQA;;AAcDC,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKP,KAAL,CAAWQ,KAAX,GAAmB,CAAxB,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKR,KAAL,CAAWC,IAAX,CAAgBQ,IAArB,CAFD,EAGC;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKJ,iBAAL,EADF,CAHD,EAMC;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAE,KAAKD,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,WADD,UAKM;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAE,KAAKD,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,WALN,CAND,CADD;AAkBA;;AA3C+B;;AA8CjC,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO,EAAP;AACA,CAFD;;AAGA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWb,KAAX,KAAqB;AAC/C,SAAO;AACND,IAAAA,cAAc,EAAEG,EAAE,IAAI;AACrBW,MAAAA,QAAQ,CAAChB,OAAO,CAACiB,YAAR,CAAqBZ,EAArB,CAAD,CAAR;AACA,KAHK;AAINa,IAAAA,YAAY,EAAEb,EAAE,IAAI;AACnBW,MAAAA,QAAQ,CAAChB,OAAO,CAACmB,UAAR,CAAmBd,EAAnB,CAAD,CAAR;AACE;AANG,GAAP;AAQA,CATD;;AAUA,eAAeN,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\n\nclass TaskItem extends Component {\n\tshowStatusElement() {\n\t\treturn (\n\t\t\t<span\n\t\t\t\tclassName={this.props.task.status ? 'label label-danger' : 'label label-info'}\n\t\t\t\tonClick={this.onUpdateStatus}\n\t\t\t>\n\t\t\t\t{this.props.task.status ? 'Active' : 'Hidden'}\n\t\t\t</span>\n\t\t);\n\t}\n\n\tonUpdateStatus = () => {\n\t\tthis.props.onUpdateStatus(this.props.task.id);\n\t}\n\n\tonDelete = () => {\n\t\tthis.props.onDelete(this.props.task.id);\n\t}\n\n\tonUpdate = () => {\n\t\tthis.props.onUpdate(this.props.task.id);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<tr>\n\t\t\t\t<td>{this.props.index + 1}</td>\n\t\t\t\t<td>{this.props.task.name}</td>\n\t\t\t\t<td className=\"text-center\">\n\t\t\t\t\t{this.showStatusElement()}\n\t\t\t\t</td>\n\t\t\t\t<td className=\"text-center\">\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={this.onUpdate}>\n\t\t\t\t\t\t<span className=\"fa fa-pencil mr-5\"></span>Modify\n          </button>\n\t\t\t\t\t&nbsp;\n          <button type=\"button\" className=\"btn btn-primary\" onClick={this.onDelete}>\n\t\t\t\t\t\t<span className=\"fa fa-trash mr-5\"></span>Delete\n          </button>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {}\n};\nconst mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tonUpdateStatus: id => {\n\t\t\tdispatch(actions.updateStatus(id))\n\t\t},\n\t\tonDeleteTask: id => {\n\t\t\tdispatch(actions.deleteTask(id))\n    }\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);\n"]},"metadata":{},"sourceType":"module"}