{"ast":null,"code":"var _jsxFileName = \"/home/binhcao/Desktop/todo-list-react-redux/src/components/TaskList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\nimport TaskItem from './TaskItem';\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var filter = {\n        name: name === 'filterName' ? value : this.state.filterName,\n        status: name === 'filterStatus' ? value : this.state.filterStatus\n      };\n      this.props.onFilterTable(filter);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      filterName: '',\n      filterStatus: -1\n    };\n  }\n\n  render() {\n    var _this$props = this.props,\n        tasks = _this$props.tasks,\n        filterTable = _this$props.filterTable,\n        keyword = _this$props.keyword,\n        sort = _this$props.sort; //Filter by name and status\n\n    if (filterTable.name) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(filterTable.name.toLowerCase()) !== -1;\n      });\n    }\n\n    tasks = tasks.filter(task => {\n      if (filterTable.status === -1) return task;else return task.status === (filterTable.status === 1 ? true : false);\n    }); //Search\n\n    if (keyword) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n      });\n    } //Sort\n\n\n    if (sort.by === 'name') {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sort.value;else if (a.name < b.name) return -sort.value;else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sort.value;else if (a.status < b.status) return sort.value;else return 0;\n      });\n    }\n\n    var elmTasks = tasks.map((task, index) => {\n      return React.createElement(TaskItem, {\n        key: task.id,\n        index: index,\n        task: task,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"filterName\",\n      value: filterTable.name,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"filterStatus\",\n      value: filterTable.status,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"option\", {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Hidden\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Active\"))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), elmTasks));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks,\n    filterTable: state.filterTable,\n    keyword: state.search,\n    sort: state.sort\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onFilterTable: filter => {\n      dispatch(actions.filterTask(filter));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","map":{"version":3,"sources":["/home/binhcao/Desktop/todo-list-react-redux/src/components/TaskList.js"],"names":["React","Component","connect","actions","TaskItem","TaskList","constructor","props","onChange","event","target","name","value","type","checked","filter","state","filterName","status","filterStatus","onFilterTable","setState","render","tasks","filterTable","keyword","sort","task","toLowerCase","indexOf","by","a","b","elmTasks","map","index","id","mapStateToProps","search","mapDispatchToProps","dispatch","filterTask"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\nimport TaskItem from './TaskItem'\n\nclass TaskList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfilterName: '',\n\t\t\tfilterStatus: -1\n\t\t};\n\t}\n\n\tonChange = (event) => {\n\t\tvar target = event.target;\n\t\tvar name = target.name;\n\t\tvar value = target.type === 'checkbox' ? target.checked : target.value;\n\t\tvar filter = {\n\t\t\tname: name === 'filterName' ? value : this.state.filterName,\n\t\t\tstatus: name === 'filterStatus' ? value : this.state.filterStatus\n\t\t};\n\t\tthis.props.onFilterTable(filter);\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t}\n\n\trender() {\n\t\tvar { tasks, filterTable, keyword, sort } = this.props;\n\t\t//Filter by name and status\n\t\tif (filterTable.name) {\n\t\t\ttasks = tasks.filter(task => {\n\t\t\t\treturn task.name.toLowerCase().indexOf(filterTable.name.toLowerCase()) !== -1;\n\t\t\t});\n\t\t}\n\t\ttasks = tasks.filter(task => {\n\t\t\tif (filterTable.status === -1) return task;\n\t\t\telse return task.status === (filterTable.status === 1 ? true : false);\n\t\t});\n\t\t//Search\n\t\tif (keyword) {\n\t\t\ttasks = tasks.filter(task => {\n\t\t\t\treturn task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n\t\t\t});\n\t\t}\n\t\t//Sort\n\t\tif (sort.by === 'name') {\n\t\t\ttasks.sort((a, b) => {\n\t\t\t\tif (a.name > b.name) return sort.value;\n\t\t\t\telse if (a.name < b.name) return -sort.value;\n\t\t\t\telse return 0;\n\t\t\t});\n\t\t} else {\n\t\t\ttasks.sort((a, b) => {\n\t\t\t\tif (a.status > b.status) return -sort.value;\n\t\t\t\telse if (a.status < b.status) return sort.value;\n\t\t\t\telse return 0;\n\t\t\t});\n\t\t}\n\n\t\tvar elmTasks = tasks.map((task, index) => {\n\t\t\treturn <TaskItem\n\t\t\t\tkey={task.id}\n\t\t\t\tindex={index}\n\t\t\t\ttask={task}\n\t\t\t/>\n\t\t});\n\t\treturn (\n\t\t\t<table className=\"table table-bordered table-hover\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th className=\"text-center\">ID</th>\n\t\t\t\t\t\t<th className=\"text-center\">Name</th>\n\t\t\t\t\t\t<th className=\"text-center\">Status</th>\n\t\t\t\t\t\t<th className=\"text-center\">Action</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tname=\"filterName\"\n\t\t\t\t\t\t\t\tvalue={filterTable.name}\n\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tname=\"filterStatus\"\n\t\t\t\t\t\t\t\tvalue={filterTable.status}\n\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value={-1}>All</option>\n\t\t\t\t\t\t\t\t<option value={0}>Hidden</option>\n\t\t\t\t\t\t\t\t<option value={1}>Active</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t{elmTasks}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\ttasks: state.tasks,\n\t\tfilterTable: state.filterTable,\n\t\tkeyword: state.search,\n\t\tsort: state.sort\n\t}\n};\nconst mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tonFilterTable: filter => {\n\t\t\tdispatch(actions.filterTask(filter));\n\t\t}\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\n"]},"metadata":{},"sourceType":"module"}