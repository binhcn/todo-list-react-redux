{"ast":null,"code":"var _jsxFileName = \"/home/binhcao/Desktop/task-management/src/components/TaskList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\nimport TaskItem from './TaskItem';\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var filter = {};\n      this.props.onFilterTable(name === 'filterName' ? value : this.state.filterName, name === 'filterStatus' ? value : this.state.filterStatus);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      filterName: '',\n      filterStatus: -1\n    };\n  }\n\n  render() {\n    var tasks = this.props.tasks;\n    var _this$state = this.state,\n        filterName = _this$state.filterName,\n        filterStatus = _this$state.filterStatus;\n    var elmTasks = tasks.map((task, index) => {\n      return React.createElement(TaskItem, {\n        key: task.id,\n        index: index,\n        task: task,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"filterName\",\n      value: filterName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"filterStatus\",\n      value: filterStatus,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"option\", {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Hidden\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Active\"))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), elmTasks));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onFilterTable: filter => {\n      dispatch(actions.filterTask(filter));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","map":{"version":3,"sources":["/home/binhcao/Desktop/task-management/src/components/TaskList.js"],"names":["React","Component","connect","actions","TaskItem","TaskList","constructor","props","onChange","event","target","name","value","type","checked","filter","onFilterTable","state","filterName","filterStatus","setState","render","tasks","elmTasks","map","task","index","id","mapStateToProps","mapDispatchToProps","dispatch","filterTask"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\nimport TaskItem from './TaskItem'\n\nclass TaskList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfilterName: '',\n\t\t\tfilterStatus: -1\n\t\t};\n\t}\n\n\tonChange = (event) => {\n\t\tvar target = event.target;\n\t\tvar name = target.name;\n\t\tvar value = target.type === 'checkbox' ? target.checked : target.value;\n\t\tvar filter = {\n\n\t\t};\n\t\tthis.props.onFilterTable(\n\t\t\tname === 'filterName' ? value : this.state.filterName,\n\t\t\tname === 'filterStatus' ? value : this.state.filterStatus\n\t\t);\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t}\n\n\trender() {\n\t\tvar { tasks } = this.props;\n\t\tvar { filterName, filterStatus } = this.state;\n\t\tvar elmTasks = tasks.map((task, index) => {\n\t\t\treturn <TaskItem\n\t\t\t\tkey={task.id}\n\t\t\t\tindex={index}\n\t\t\t\ttask={task}\n\t\t\t/>\n\t\t});\n\t\treturn (\n\t\t\t<table className=\"table table-bordered table-hover\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th className=\"text-center\">ID</th>\n\t\t\t\t\t\t<th className=\"text-center\">Name</th>\n\t\t\t\t\t\t<th className=\"text-center\">Status</th>\n\t\t\t\t\t\t<th className=\"text-center\">Action</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tname=\"filterName\"\n\t\t\t\t\t\t\t\tvalue={filterName}\n\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tname=\"filterStatus\"\n\t\t\t\t\t\t\t\tvalue={filterStatus}\n\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value={-1}>All</option>\n\t\t\t\t\t\t\t\t<option value={0}>Hidden</option>\n\t\t\t\t\t\t\t\t<option value={1}>Active</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t{elmTasks}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\ttasks: state.tasks\n\t}\n};\nconst mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tonFilterTable: filter => {\n\t\t\tdispatch(actions.filterTask(filter));\n\t\t}\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\n"]},"metadata":{},"sourceType":"module"}