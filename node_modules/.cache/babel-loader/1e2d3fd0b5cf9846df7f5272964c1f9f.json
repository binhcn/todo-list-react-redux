{"ast":null,"code":"import _defineProperty from \"/home/binhcao/Desktop/task-management/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from '../constants/ActionTypes';\nimport { findIndex } from 'lodash';\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.ADD_TASK:\n      var newTask = {\n        id: generateId(),\n        name: action.task.name,\n        status: action.task.status === 'true' ? true : false\n      };\n      state.push(newTask);\n      localStorage.setItem('tasks', JSON.stringify(state));\n      return [...state];\n\n    case types.UPDATE_STATUS_TASK:\n      var index = findIndex(state, task => {\n        return task.id === action.id;\n      });\n\n      if (index > -1) {\n        state[index] = _objectSpread({}, state[index], {\n          status: !state[index].status\n        });\n        localStorage.setItem('tasks', JSON.stringify(state));\n      }\n\n      return [...state];\n\n    case types.DELETE_TASK:\n      var index = findIndex(state, task => {\n        return task.id === action.id;\n      });\n\n      if (index > -1) {\n        state[index] = _objectSpread({}, state[index], {\n          status: !state[index].status\n        });\n        localStorage.setItem('tasks', JSON.stringify(state));\n      }\n\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nvar s4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n};\n\nvar generateId = () => {\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/binhcao/Desktop/task-management/src/reducers/tasks.js"],"names":["types","findIndex","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","ADD_TASK","newTask","id","generateId","name","task","status","push","setItem","stringify","UPDATE_STATUS_TASK","index","DELETE_TASK","s4","Math","floor","random","toString","substring"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AACA,SAAQC,SAAR,QAAwB,QAAxB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,IAAIM,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,KAAK,CAACY,QAAX;AACI,UAAIC,OAAO,GAAG;AACVC,QAAAA,EAAE,EAAEC,UAAU,EADJ;AAEVC,QAAAA,IAAI,EAAEN,MAAM,CAACO,IAAP,CAAYD,IAFR;AAGVE,QAAAA,MAAM,EAAER,MAAM,CAACO,IAAP,CAAYC,MAAZ,KAAuB,MAAvB,GAAgC,IAAhC,GAAuC;AAHrC,OAAd;AAKAT,MAAAA,KAAK,CAACU,IAAN,CAAWN,OAAX;AACAR,MAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BjB,IAAI,CAACkB,SAAL,CAAeZ,KAAf,CAA9B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKT,KAAK,CAACsB,kBAAX;AACI,UAAIC,KAAK,GAAGtB,SAAS,CAACQ,KAAD,EAAQQ,IAAI,IAAI;AACjC,eAAOA,IAAI,CAACH,EAAL,KAAYJ,MAAM,CAACI,EAA1B;AACH,OAFoB,CAArB;;AAGA,UAAIS,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZd,QAAAA,KAAK,CAACc,KAAD,CAAL,qBAAmBd,KAAK,CAACc,KAAD,CAAxB;AAAiCL,UAAAA,MAAM,EAAE,CAACT,KAAK,CAACc,KAAD,CAAL,CAAaL;AAAvD;AACAb,QAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BjB,IAAI,CAACkB,SAAL,CAAeZ,KAAf,CAA9B;AACH;;AACD,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKT,KAAK,CAACwB,WAAX;AACQ,UAAID,KAAK,GAAGtB,SAAS,CAACQ,KAAD,EAAQQ,IAAI,IAAI;AACjC,eAAOA,IAAI,CAACH,EAAL,KAAYJ,MAAM,CAACI,EAA1B;AACH,OAFoB,CAArB;;AAGA,UAAIS,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZd,QAAAA,KAAK,CAACc,KAAD,CAAL,qBAAmBd,KAAK,CAACc,KAAD,CAAxB;AAAiCL,UAAAA,MAAM,EAAE,CAACT,KAAK,CAACc,KAAD,CAAL,CAAaL;AAAvD;AACAb,QAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BjB,IAAI,CAACkB,SAAL,CAAeZ,KAAf,CAA9B;AACH;;AACD,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AAER;AACI,aAAOA,KAAP;AA9BR;AAgCH,CAjCD;;AAmCA,IAAIgB,EAAE,GAAG,MAAM;AACX,SAAOC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAL,IAAsB,OAAjC,EAA0CC,QAA1C,CAAmD,EAAnD,EAAuDC,SAAvD,CAAiE,CAAjE,CAAP;AACH,CAFD;;AAIA,IAAIf,UAAU,GAAG,MAAM;AACnB,SAAOU,EAAE,KAAKA,EAAE,EAAT,GAAc,GAAd,GAAoBA,EAAE,EAAtB,GAA2B,GAA3B,GAAiCA,EAAE,EAAnC,GAAwC,GAAxC,GAA8CA,EAAE,EAAhD,GAAqD,GAArD,GAA2DA,EAAE,EAA7D,GAAkEA,EAAE,EAApE,GAAyEA,EAAE,EAAlF;AACH,CAFD;;AAKA,eAAejB,SAAf","sourcesContent":["import * as types from '../constants/ActionTypes';\nimport {findIndex} from 'lodash';\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.ADD_TASK:\n            var newTask = {\n                id: generateId(),\n                name: action.task.name,\n                status: action.task.status === 'true' ? true : false\n            }\n            state.push(newTask);\n            localStorage.setItem('tasks', JSON.stringify(state));\n            return [...state];\n        case types.UPDATE_STATUS_TASK:\n            var index = findIndex(state, task => {\n                return task.id === action.id;\n            });\n            if (index > -1) {\n                state[index] = {...state[index], status: !state[index].status};\n                localStorage.setItem('tasks', JSON.stringify(state));\n            }\n            return [...state];\n        case types.DELETE_TASK:\n                var index = findIndex(state, task => {\n                    return task.id === action.id;\n                });\n                if (index > -1) {\n                    state[index] = {...state[index], status: !state[index].status};\n                    localStorage.setItem('tasks', JSON.stringify(state));\n                }\n                return [...state]; \n            \n        default:\n            return state;\n    }\n};\n\nvar s4 = () => {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n}\n\nvar generateId = () => {\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}