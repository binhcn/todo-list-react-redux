{"ast":null,"code":"var _jsxFileName = \"/home/binhcao/Desktop/task-management/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport TaskList from './components/TaskList';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onGenerateData = () => {\n      var tasks = [{\n        id: this.generateId(),\n        name: 'Learn programming',\n        status: true\n      }, {\n        id: this.generateId(),\n        name: 'Go swimming',\n        status: false\n      }, {\n        id: this.generateId(),\n        name: 'Go to bed',\n        status: true\n      }];\n      this.setState({\n        tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onToggleForm = () => {\n      this.props.onToggleForm();\n      this.props.onClearTask({\n        id: '',\n        name: ''\n      });\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      filterStatus = parseInt(filterStatus, 10);\n      this.setState({\n        filterName: filterName.toLowerCase(),\n        filterStatus\n      });\n    };\n\n    this.onSearch = keyword => {\n      this.setState({\n        keyword\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        // Nhận từ state component dưới rồi chuyền props trở lại\n        sortBy,\n        sortValue\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      filterName: '',\n      filterStatus: -1,\n      keyword: '',\n      sortBy: 'name',\n      // shouldn't object type\n      sortValue: 1\n    };\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateId() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n  }\n\n  render() {\n    var _this$state = this.state,\n        tasks = _this$state.tasks,\n        filterName = _this$state.filterName,\n        filterStatus = _this$state.filterStatus,\n        keyword = _this$state.keyword,\n        sortBy = _this$state.sortBy,\n        sortValue = _this$state.sortValue;\n    var isDisplayForm = this.props.isDisplayForm;\n\n    if (filterName) {\n      // !== null !== 0 !== undefined\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(filterName) !== -1;\n      });\n    }\n\n    tasks = tasks.filter(task => {\n      if (filterStatus === -1) return task;else return task.status === (filterStatus === 1 ? true : false);\n    });\n\n    if (keyword) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n      });\n    }\n\n    if (sortBy === 'name') {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sortValue;else if (a.name < b.name) return -sortValue;else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sortValue;else if (a.status < b.status) return sortValue;else return 0;\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Task Management\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : 'col-xs-0 col-sm-0 col-md-0 col-lg-0',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(TaskForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), \"Add your task\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger ml-5\",\n      onClick: this.onGenerateData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Generate sample data\"), React.createElement(TaskControl, {\n      onSearch: this.onSearch,\n      onSort: this.onSort,\n      sortBy: sortBy,\n      sortValue: sortValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(TaskList, {\n      onUpdate: this.onUpdate,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    },\n    onClearTask: task => {\n      dispatch(actions.editTask(task));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/binhcao/Desktop/task-management/src/App.js"],"names":["React","Component","TaskForm","TaskControl","TaskList","connect","actions","App","constructor","props","onGenerateData","tasks","id","generateId","name","status","setState","localStorage","setItem","JSON","stringify","onToggleForm","onClearTask","onFilter","filterName","filterStatus","parseInt","toLowerCase","onSearch","keyword","onSort","sortBy","sortValue","state","s4","Math","floor","random","toString","substring","render","isDisplayForm","filter","task","indexOf","sort","a","b","onUpdate","mapStateToProps","mapDispatchToProps","dispatch","toggleForm","editTask"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport TaskList from './components/TaskList';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      filterName: '',\n      filterStatus: -1,\n      keyword: '',\n      sortBy: 'name',         // shouldn't object type\n      sortValue: 1\n    }\n  }\n\n  onGenerateData = () => {\n    var tasks = [\n      {\n        id: this.generateId(),\n        name: 'Learn programming',\n        status: true\n      },\n      {\n        id: this.generateId(),\n        name: 'Go swimming',\n        status: false\n      },\n      {\n        id: this.generateId(),\n        name: 'Go to bed',\n        status: true\n      }\n    ];\n    this.setState({\n      tasks\n    });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateId() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n  }\n\n  onToggleForm = () => {\n    this.props.onToggleForm();\n    this.props.onClearTask({\n      id: '',\n      name: ''\n    });\n  }\n\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n        filterName: filterName.toLowerCase(),\n        filterStatus\n    });\n  }\n\n  onSearch = (keyword) => {\n    this.setState({\n      keyword\n    });\n  }\n\n  onSort = (sortBy, sortValue) => {\n    this.setState({             // Nhận từ state component dưới rồi chuyền props trở lại\n        sortBy,\n        sortValue\n    })\n  }\n\n  render() {\n    var { tasks, filterName, filterStatus, keyword, sortBy, sortValue } = this.state;\n    var {isDisplayForm} = this.props;\n    if (filterName) {            // !== null !== 0 !== undefined\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(filterName) !== -1;\n      });\n    }        \n    tasks = tasks.filter(task => {\n      if (filterStatus === -1) return task;\n      else return task.status === (filterStatus === 1 ? true : false);\n    });\n    if (keyword) {            \n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n      });\n    }\n\n    if (sortBy === 'name') {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sortValue;\n        else if (a.name < b.name) return -sortValue;\n        else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sortValue;\n        else if (a.status < b.status) return sortValue;\n        else return 0;\n      });\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Task Management</h1><hr />\n        </div>\n        <div className=\"row\">\n          <div className={isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : 'col-xs-0 col-sm-0 col-md-0 col-lg-0'}>\n            <TaskForm />\n          </div>\n          <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.onToggleForm}>\n              <span className=\"fa fa-plus mr-5\"></span>Add your task\n            </button>\n            <button type=\"button\" className=\"btn btn-danger ml-5\" onClick={this.onGenerateData}>\n              Generate sample data\n            </button>\n            <TaskControl \n                onSearch={this.onSearch} \n                onSort={this.onSort}\n                sortBy={sortBy}\n                sortValue={sortValue}\n            />\n            <div className=\"row mt-15\">\n              <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <TaskList \n                  onUpdate={this.onUpdate}\n                  onFilter={this.onFilter}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisDisplayForm: state.isDisplayForm\n\t}\n};\nconst mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tonToggleForm: () => {\n\t\t\tdispatch(actions.toggleForm())\n    },\n    onClearTask: task => {\n\t\t\tdispatch(actions.editTask(task))\n\t\t}\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}