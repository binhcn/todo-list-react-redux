{"ast":null,"code":"import * as types from '../constants/ActionTypes';\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.ADD_TASK:\n      var newTask = {\n        id: generateId(),\n        name: action.task.name,\n        status: action.task.status === 'true' ? true : false\n      };\n      state.push(newTask);\n      localStorage.setItem('tasks', JSON.stringify(state));\n      return [...state];\n\n    case types.UPDATE_STATUS_TASK:\n      var tasks = this.state.tasks;\n      var index = findIndex(tasks, task => {\n        return task.id === id;\n      });\n\n      if (index > -1) {\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nvar s4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n};\n\nvar generateId = () => {\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/binhcao/Desktop/task-management/src/reducers/tasks.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","ADD_TASK","newTask","id","generateId","name","task","status","push","setItem","stringify","UPDATE_STATUS_TASK","tasks","index","findIndex","setState","s4","Math","floor","random","toString","substring"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AAGA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,IAAIM,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,KAAK,CAACW,QAAX;AACI,UAAIC,OAAO,GAAG;AACVC,QAAAA,EAAE,EAAEC,UAAU,EADJ;AAEVC,QAAAA,IAAI,EAAEN,MAAM,CAACO,IAAP,CAAYD,IAFR;AAGVE,QAAAA,MAAM,EAAER,MAAM,CAACO,IAAP,CAAYC,MAAZ,KAAuB,MAAvB,GAAgC,IAAhC,GAAuC;AAHrC,OAAd;AAKAT,MAAAA,KAAK,CAACU,IAAN,CAAWN,OAAX;AACAR,MAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BjB,IAAI,CAACkB,SAAL,CAAeZ,KAAf,CAA9B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKR,KAAK,CAACqB,kBAAX;AAAA,UACUC,KADV,GACoB,KAAKd,KADzB,CACUc,KADV;AAEI,UAAIC,KAAK,GAAGC,SAAS,CAACF,KAAD,EAAQN,IAAI,IAAI;AACjC,eAAOA,IAAI,CAACH,EAAL,KAAYA,EAAnB;AACH,OAFoB,CAArB;;AAGA,UAAIU,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZD,QAAAA,KAAK,CAACC,KAAD,CAAL,CAAaN,MAAb,GAAsB,CAACK,KAAK,CAACC,KAAD,CAAL,CAAaN,MAApC;AACA,aAAKQ,QAAL,CAAc;AACVH,UAAAA;AADU,SAAd;AAGAlB,QAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BjB,IAAI,CAACkB,SAAL,CAAeE,KAAf,CAA9B;AACH;;AACD,aAAO,CAAC,GAAGd,KAAJ,CAAP;;AACJ;AACI,aAAOA,KAAP;AAxBR;AA0BH,CA3BD;;AA6BA,IAAIkB,EAAE,GAAG,MAAM;AACX,SAAOC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAL,IAAsB,OAAjC,EAA0CC,QAA1C,CAAmD,EAAnD,EAAuDC,SAAvD,CAAiE,CAAjE,CAAP;AACH,CAFD;;AAIA,IAAIjB,UAAU,GAAG,MAAM;AACnB,SAAOY,EAAE,KAAKA,EAAE,EAAT,GAAc,GAAd,GAAoBA,EAAE,EAAtB,GAA2B,GAA3B,GAAiCA,EAAE,EAAnC,GAAwC,GAAxC,GAA8CA,EAAE,EAAhD,GAAqD,GAArD,GAA2DA,EAAE,EAA7D,GAAkEA,EAAE,EAApE,GAAyEA,EAAE,EAAlF;AACH,CAFD;;AAKA,eAAenB,SAAf","sourcesContent":["import * as types from '../constants/ActionTypes';\n\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.ADD_TASK:\n            var newTask = {\n                id: generateId(),\n                name: action.task.name,\n                status: action.task.status === 'true' ? true : false\n            }\n            state.push(newTask);\n            localStorage.setItem('tasks', JSON.stringify(state));\n            return [...state];\n        case types.UPDATE_STATUS_TASK:\n            var { tasks } = this.state;\n            var index = findIndex(tasks, task => {\n                return task.id === id;\n            });\n            if (index > -1) {\n                tasks[index].status = !tasks[index].status;\n                this.setState({\n                    tasks\n                });\n                localStorage.setItem('tasks', JSON.stringify(tasks));\n            }\n            return [...state];\n        default:\n            return state;\n    }\n};\n\nvar s4 = () => {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n}\n\nvar generateId = () => {\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}