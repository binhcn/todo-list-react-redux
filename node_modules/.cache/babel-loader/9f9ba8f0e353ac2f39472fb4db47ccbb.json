{"ast":null,"code":"import _defineProperty from \"/home/binhcao/Desktop/task-management/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from '../constants/ActionTypes';\nimport { findIndex } from 'lodash';\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n  var index = -1;\n\n  switch (action.type) {\n    case types.SAVE_TASK:\n      var task = {\n        id: action.task.id,\n        name: action.task.name,\n        status: action.task.status === 'true' ? true : false\n      };\n\n      if (!task.id) {\n        // '', \"\", null, undefined, 0, false in if return false\n        task.id = generateId();\n        state.push(task);\n      } else {\n        index = findIndex(state, task => {\n          return task.id === action.id;\n        });\n        state[index] = task;\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(state));\n      return [...state];\n\n    case types.UPDATE_STATUS_TASK:\n      index = findIndex(state, task => {\n        return task.id === action.id;\n      });\n\n      if (index > -1) {\n        state[index] = _objectSpread({}, state[index], {\n          status: !state[index].status\n        });\n        localStorage.setItem('tasks', JSON.stringify(state));\n      }\n\n      return [...state];\n\n    case types.DELETE_TASK:\n      index = findIndex(state, task => {\n        return task.id === action.id;\n      });\n\n      if (index > -1) {\n        state.splice(index, 1);\n        localStorage.setItem('tasks', JSON.stringify(state));\n      }\n\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nvar s4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n};\n\nvar generateId = () => {\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/binhcao/Desktop/task-management/src/reducers/tasks.js"],"names":["types","findIndex","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","index","type","SAVE_TASK","task","id","name","status","generateId","push","setItem","stringify","UPDATE_STATUS_TASK","DELETE_TASK","splice","s4","Math","floor","random","toString","substring"],"mappings":"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","sourcesContent":["import * as types from '../constants/ActionTypes';\nimport { findIndex } from 'lodash';\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n    var index = -1;\n    switch (action.type) {\n        case types.SAVE_TASK:\n            var task = {\n                id: action.task.id,\n                name: action.task.name,\n                status: action.task.status === 'true' ? true : false\n            }\n            if(!task.id){                   // '', \"\", null, undefined, 0, false in if return false\n                task.id = generateId();\n                state.push(task);\n            }else{\n                index = findIndex(state, task => {\n                    return task.id === action.id;\n                });\n                state[index] = task;\n            }\n            localStorage.setItem('tasks', JSON.stringify(state));\n            return [...state];\n\n        case types.UPDATE_STATUS_TASK:\n            index = findIndex(state, task => {\n                return task.id === action.id;\n            });\n            if (index > -1) {\n                state[index] = { ...state[index], status: !state[index].status };\n                localStorage.setItem('tasks', JSON.stringify(state));\n            }\n            return [...state];\n\n        case types.DELETE_TASK:\n            index = findIndex(state, task => {\n                return task.id === action.id;\n            });\n            if (index > -1) {\n                state.splice(index, 1);\n                localStorage.setItem('tasks', JSON.stringify(state));\n            }\n            return [...state];\n\n        default:\n            return state;\n    }\n};\n\nvar s4 = () => {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n}\n\nvar generateId = () => {\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}