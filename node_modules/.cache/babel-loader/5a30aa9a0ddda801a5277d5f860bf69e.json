{"ast":null,"code":"var _jsxFileName = \"/home/binhcao/Desktop/todo-list-react-redux/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport TaskList from './components/TaskList';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onToggleForm = () => {\n      var taskEditing = this.props.taskEditing;\n\n      if (taskEditing && taskEditing.id) {\n        this.props.onOpenForm();\n      } else {\n        this.props.onToggleForm();\n      }\n\n      this.props.onClearTask({\n        id: '',\n        name: '',\n        status: false\n      });\n    };\n  }\n\n  render() {\n    var isDisplayForm = this.props.isDisplayForm;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Task Management\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : 'col-xs-0 col-sm-0 col-md-0 col-lg-0',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(TaskForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), \"Add your task\"), React.createElement(TaskControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(TaskList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    taskEditing: state.taskEditing\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    },\n    onClearTask: task => {\n      dispatch(actions.editTask(task));\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/binhcao/Desktop/todo-list-react-redux/src/App.js"],"names":["React","Component","TaskForm","TaskControl","TaskList","connect","actions","App","onToggleForm","taskEditing","props","id","onOpenForm","onClearTask","name","status","render","isDisplayForm","mapStateToProps","state","mapDispatchToProps","dispatch","toggleForm","task","editTask","openForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport TaskList from './components/TaskList';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n\n  onToggleForm = () => {\n    var {taskEditing} = this.props;\n    if(taskEditing && taskEditing.id){\n      this.props.onOpenForm();\n    }else{\n      this.props.onToggleForm();\n    }\n    this.props.onClearTask({\n      id: '',\n      name: '',\n      status: false\n    });\n  }\n\n  render() {\n    var {isDisplayForm} = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Task Management</h1><hr />\n        </div>\n        <div className=\"row\">\n          <div className={isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : 'col-xs-0 col-sm-0 col-md-0 col-lg-0'}>\n            <TaskForm />\n          </div>\n          <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.onToggleForm}>\n              <span className=\"fa fa-plus mr-5\"></span>Add your task\n            </button>\n            <TaskControl />\n            <div className=\"row mt-15\">\n              <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <TaskList />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n    isDisplayForm: state.isDisplayForm,\n    taskEditing: state.taskEditing\n\t}\n};\nconst mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tonToggleForm: () => {\n\t\t\tdispatch(actions.toggleForm())\n    },\n    onClearTask: task => {\n\t\t\tdispatch(actions.editTask(task))\n    },\n    onOpenForm: () => {\n\t\t\tdispatch(actions.openForm())\n\t\t}\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}